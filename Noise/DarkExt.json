{
	"Identifier": "KGNO",
	"Dependencies": "",
	"UK English": {
		"About": {
			"Name": "Noise",
			"Author": "Kapi",
			"Copyright": "Copyright \u00A9 2021 by Kapi",
			"Comment": "Generates Noise using many difrent alogrithms",
			//"Help": "Help/Todo.chm",
			"URL": "https://github.com/kapigames/NoiseExtension"
		},

		"ActionMenu": [
			[ 0, "Set Seed" ],
			"---",
			[ 1, "Request Noise 3D array" ],
			[ 2, "Request Noise 2D array" ],
			[ 3, "Request Noise 1D array" ],
			[ 4, "Request Looping Noise 1D array" ],
			[ 5, "Cleanup request" ],
			[ 6, "Cleanup all requests" ],
			"---",
			[ 7, "Set Noise Type" ],
			[ 8, "Set Noise Frequency" ],
			"---",
			[ 9, "Set Fractal Type" ],
			[ 10, "Set Fractal Octaves" ],
			[ 11, "Set Fractal Lacunarity" ],
			[ 12, "Set Fractal Weighted Strength" ],
			[ 13, "Set Fractal PingPong Strength" ],
			"---",
			[ 14, "Set Cellular Distance Function" ],
			[ 15, "Set Cellular Return Type" ],
			[ 16, "Set Cellular Jitter" ],
			"---"
		],
		"ConditionMenu": [
			[ 0, "Is Noise request ready?" ],
			[ 1, "On Noise request ready?" ],
			"---"
		],
		"ExpressionMenu": [
			[ 0, "Get current seed" ],
			[ 1, "Convert string to seed" ],
			"---",
			[ 2, "Get Noise 3D" ],
			[ 3, "Get Noise 2D" ],
			[ 4, "Get Noise 1D" ],
			[ 5, "Get looping Noise 1D" ],
			"---",
			[ 6, "Get Noise 3D from request" ],
			[ 7, "Get Noise 2D from request" ],
			[ 8, "Get Noise 1D from request" ],
			[ 9, "Get looping Noise 1D from request" ],
			[ 10, "Get number of requests" ],
			"---",
			[
				"Noise Types",
				[ 11, "OpenSimplex2" ],
				[ 12, "OpenSimplex2S" ],
				[ 13, "Cellular" ],
				[ 14, "Perlin" ],
				[ 15, "ValueCubic" ],
				[ 16, "Value" ]
			],
			[
				"Fractal Types",
				[ 17, "None" ],
				[ 18, "FBm" ],
				[ 19, "Rigid" ],
				[ 20, "PingPong" ]
			],
			[
				"Cellular Distance Functions",
				[ 21, "Euclidean" ],
				[ 22, "EuclideanSq" ],
				[ 23, "Manhattan" ],
				[ 24, "Hybrid" ]
			],
			[
				"Cellular Return Types",
				[ 25, "CellValue" ],
				[ 26, "Distance" ],
				[ 27, "Distance2" ],
				[ 29, "Distance2Add" ],
				[ 30, "Distance2Sub" ],
				[ 31, "Distance2Mul" ],
				[ 32, "Distance2Div" ]
			],
			"---",
			[ 33, "Current Noise Type" ],
			[ 34, "Current Fractal Type" ],
			[ 35, "Current Cellular Distance Function" ],
			[ 36, "Current Cellular Return Type" ],
			"---"
		],

		"Actions": [
			{
				"Title": "Set Seed to %0",
				"Parameters": [
					[ "Integer", "Seed" ]
				]
			},


			{
				"Title": "Request Noise 3D array %0 with positions from 0 to %1 %2 %3 and size %4 %5 %6",
				"Parameters": [
					[ "Text", "Name" ],
					[ "Integer", "Max X (Look in help file for info how it works)" ],
					[ "Integer", "Max Y (Look in help file for info how it works)" ],
					[ "Integer", "Max Z (Look in help file for info how it works)" ],
					[ "Integer", "X Size (Look in help file for info how it works)" ],
					[ "Integer", "Y Size (Look in help file for info how it works)" ],
					[ "Integer", "Z Size (Look in help file for info how it works)" ]
				]
			},
			{
				"Title": "Request Noise 2D array %0 with positions from 0 to %1 %2 and size %3 %4",
				"Parameters": [
					[ "Text", "Name" ],
					[ "Integer", "Max X (Look in help file for info how it works)" ],
					[ "Integer", "Max Y (Look in help file for info how it works)" ],
					[ "Integer", "X Size (Look in help file for info how it works)" ],
					[ "Integer", "Y Size (Look in help file for info how it works)" ]
				]
			},
			{
				"Title": "Request Noise 1D array %0 with positions from 0 to %1 and size %2",
				"Parameters": [
					[ "Text", "Name" ],
					[ "Integer", "Max X (Look in help file for info how it works)" ],
					[ "Integer", "X Size (Look in help file for info how it works)" ]
				]
			},
			{
				"Title": "Request looping Noise 1D array %0 with positions from 0 to %1 and size %2",
				"Parameters": [
					[ "Text", "Name" ],
					[ "Integer", "Max X (Look in help file for info how it works)" ],
					[ "Integer", "X Size (Look in help file for info how it works)" ]
				]
			},
			{
				"Title": "Cleanup request %0",
				"Parameters": [
					[ "Text", "Name" ]
				]
			},
			{
				"Title": "Cleanup all reqiests"
			},

			{
				"Title": "Set Noise Type to %0",
				"Parameters": [
					[ "Integer", "Type" ]
				]
			},
			{
				"Title": "Set Noise Frequency to %0",
				"Parameters": [
					[ "Float", "Frequency" ]
				]
			},

			{
				"Title": "Set Fractal Type to %0",
				"Parameters": [
					[ "Integer", "Type" ]
				]
			},
			{
				"Title": "Set Fractal Octaves to %0",
				"Parameters": [
					[ "Integer", "Octaves" ]
				]
			},
			{
				"Title": "Set Fractal Lacunarity to %0",
				"Parameters": [
					[ "float", "Lacunarity" ]
				]
			},
			{
				"Title": "Set Fractal Weighted Strength to %0",
				"Parameters": [
					[ "float", "Weighted Strength" ]
				]
			},
			{
				"Title": "Set Fractal PingPong Strength to %0",
				"Parameters": [
					[ "float", "PingPong Strength" ]
				]
			},

			{
				"Title": "Set Cellular Distance Function to %0",
				"Parameters": [
					[ "Integer", "Distance Function" ]
				]
			},
			{
				"Title": "Set Cellular Return Type to %0",
				"Parameters": [
					[ "Integer", "Return Type" ]
				]
			},
			{
				"Title": "Set Cellular Jitter to %0",
				"Parameters": [
					[ "float", "Jitter" ]
				]
			}
		],
		"Conditions": [
			{
				"Title": "%o : Is Noise request %0 ready?",
				"Triggered": false,
				"Parameters": [
					[ "Text", "Name" ]
				]
			},
			{
				"Title": "%o : On Noise request %0 ready?",
				"Triggered": true,
				"Parameters": [
					[ "Text", "Name" ]
				]
			}
		],
		"Expressions": [
			{
				"Title": "Seed(",
				"Returns": "Integer"
			},
			{
				"Title": "ToSeed(",
				"Returns": "Integer",
				"Parameters": [
					[ "Text", "String" ]
				]
			},

			{
				"Title": "Noise3D(",
				"Returns": "Float",
				"Parameters": [
					[ "Float", "X" ],
					[ "Float", "Y" ],
					[ "Float", "Z" ]
				]
			},
			{
				"Title": "Noise2D(",
				"Returns": "Float",
				"Parameters": [
					[ "Float", "X" ],
					[ "Float", "Y" ]
				]
			},
			{
				"Title": "Noise1D(",
				"Returns": "Float",
				"Parameters": [
					[ "Float", "X" ]
				]
			},
			{
				"Title": "Looping1D(",
				"Returns": "Float",
				"Parameters": [
					[ "Float", "X" ],
					[ "Float", "X Offset" ],
					[ "Float", "X Size" ]
				]
			},


			{
				"Title": "RNoise3D(",
				"Returns": "Float",
				"Parameters": [
					[ "Text", "Name" ],
					[ "Float", "X" ],
					[ "Float", "Y" ],
					[ "Float", "Z" ]
				]
			},
			{
				"Title": "RNoise2D(",
				"Returns": "Float",
				"Parameters": [
					[ "Text", "Name" ],
					[ "Float", "X" ],
					[ "Float", "Y" ]
				]
			},
			{
				"Title": "RNoise1D(",
				"Returns": "Float",
				"Parameters": [
					[ "Text", "Name" ],
					[ "Float", "X" ]
				]
			},
			{
				"Title": "RLooping1D(",
				"Returns": "Float",
				"Parameters": [
					[ "Text", "Name" ],
					[ "Float", "X" ]
				]
			},
			{
				"Title": "Requests(",
				"Returns": "Integer"
			},

			{
				"Title": "Simplex2(",
				"Returns": "Integer"
			},
			{
				"Title": "Simplex2S(",
				"Returns": "Integer"
			},
			{
				"Title": "Cellular(",
				"Returns": "Integer"
			},
			{
				"Title": "Perlin(",
				"Returns": "Integer"
			},
			{
				"Title": "ValueCubic(",
				"Returns": "Integer"
			},
			{
				"Title": "Value(",
				"Returns": "Integer"
			},

			{
				"Title": "None(",
				"Returns": "Integer"
			},
			{
				"Title": "FBm(",
				"Returns": "Integer"
			},
			{
				"Title": "Rigid(",
				"Returns": "Integer"
			},
			{
				"Title": "PingPong(",
				"Returns": "Integer"
			},

			{
				"Title": "Euclidean(",
				"Returns": "Integer"
			},
			{
				"Title": "EuclideanSq(",
				"Returns": "Integer"
			},
			{
				"Title": "Manhattan(",
				"Returns": "Integer"
			},
			{
				"Title": "Hybrid(",
				"Returns": "Integer"
			},

			{
				"Title": "CellValue(",
				"Returns": "Integer"
			},
			{
				"Title": "Distance(",
				"Returns": "Integer"
			},
			{
				"Title": "Distance2(",
				"Returns": "Integer"
			},
			{
				"Title": "Distance2Add(",
				"Returns": "Integer"
			},
			{
				"Title": "Distance2Sub(",
				"Returns": "Integer"
			},
			{
				"Title": "Distance2Mul(",
				"Returns": "Integer"
			},
			{
				"Title": "Distance2Div(",
				"Returns": "Integer"
			},

			{
				"Title": "NoiseType(",
				"Returns": "Integer"
			},
			{
				"Title": "FractalType(",
				"Returns": "Integer"
			},
			{
				"Title": "CellularFunction(",
				"Returns": "Integer"
			},
			{
				"Title": "CellularReturnType(",
				"Returns": "Integer"
			}
		],

		"Properties": [
			{
				"Title": "Version",
				"Info": "Version",
				"Type": "Text",
				"DefaultState": "Noise v0.5.0 (Extension: v5, SDK: DarkEdif v12)"
			}
		]
	}
}

{
	"Identifier": "KGNO",
	"Dependencies": "",
	"UK English": {
		"About": {
			"Name": "Noise",
			"Author": "Kacper Bugla 'Kapi'",
			"Copyright": "Copyright \u00A9 2022 Kacper Bugla 'Kapi'",
			"Comment": "Generates Noise using many difrent alogrithms",
			"Help": "Help\\Noise.chm",
			"URL": "https://github.com/kapigames/NoiseExtension"
		},

		"ActionMenu": [
			[ 0, "Set seed" ],
			"---",
			[ 1, "Set Noise type" ],
			[ 2, "Set Noise frequency" ],
			"---",
			[ 3, "Set fractal type" ],
			[ 4, "Set fractal octaves" ],
			[ 5, "Set fractal lacunarity" ],
			[ 6, "Set fractal weighted strength" ],
			[ 7, "Set fractal PingPong strength" ],
			"---",
			[ 8, "Set cellular distance function" ],
			[ 9, "Set cellular return type" ],
			[ 10, "Set cellular jitter" ],
			"---"
		],
		"ConditionMenu": [
		],
		"ExpressionMenu": [
			[ 0, "Get current seed" ],
			[ 1, "Convert string to seed" ],
			"---",
			[ 2, "Get Noise 3D" ],
			[ 3, "Get Noise 2D" ],
			[ 4, "Get Noise 1D" ],
			[ 5, "Get looping Noise 1D" ],
			"---",
			[
				"Noise types",
				[ 6, "OpenSimplex2" ],
				[ 7, "OpenSimplex2S" ],
				[ 8, "Cellular" ],
				[ 9, "Perlin" ],
				[ 10, "ValueCubic" ],
				[ 11, "Value" ]
			],
			[
				"Fractal types",
				[ 12, "None" ],
				[ 13, "FBm" ],
				[ 14, "Rigid" ],
				[ 15, "PingPong" ]
			],
			[
				"Cellular distance functions",
				[ 16, "Euclidean" ],
				[ 17, "EuclideanSq" ],
				[ 18, "Manhattan" ],
				[ 19, "Hybrid" ]
			],
			[
				"Cellular return types",
				[ 20, "CellValue" ],
				[ 21, "Distance" ],
				[ 22, "Distance2" ],
				[ 23, "Distance2Add" ],
				[ 24, "Distance2Sub" ],
				[ 25, "Distance2Mul" ],
				[ 26, "Distance2Div" ]
			],
			"---",
			[ 27, "Current Noise type" ],
			[ 28, "Current fractal type" ],
			[ 29, "Current cellular distance function" ],
			[ 30, "Current cellular return type" ],
			"---"
		],

		"Actions": [
			{
				"Title": "Set seed to %0",
				"Parameters": [
					[ "Integer", "Seed" ]
				]
			},

			{
				"Title": "Set Noise type to %0",
				"Parameters": [
					[ "Integer", "Type" ]
				]
			},
			{
				"Title": "Set Noise frequency to %0",
				"Parameters": [
					[ "Float", "Frequency" ]
				]
			},

			{
				"Title": "Set fractal type to %0",
				"Parameters": [
					[ "Integer", "Type" ]
				]
			},
			{
				"Title": "Set fractal octaves to %0",
				"Parameters": [
					[ "Integer", "Octaves" ]
				]
			},
			{
				"Title": "Set fractal lacunarity to %0",
				"Parameters": [
					[ "float", "Lacunarity" ]
				]
			},
			{
				"Title": "Set fractal weighted strength to %0",
				"Parameters": [
					[ "float", "Weighted strength" ]
				]
			},
			{
				"Title": "Set fractal PingPong strength to %0",
				"Parameters": [
					[ "float", "PingPong strength" ]
				]
			},

			{
				"Title": "Set cellular distance function to %0",
				"Parameters": [
					[ "Integer", "Distance function" ]
				]
			},
			{
				"Title": "Set cellular return type to %0",
				"Parameters": [
					[ "Integer", "Return type" ]
				]
			},
			{
				"Title": "Set cellular jitter to %0",
				"Parameters": [
					[ "float", "Jitter" ]
				]
			}
		],
		"Conditions": [
		],
		"Expressions": [
			{
				"Title": "Seed(",
				"Returns": "Integer"
			},
			{
				"Title": "ToSeed(",
				"Returns": "Integer",
				"Parameters": [
					[ "Text", "Text" ]
				]
			},

			{
				"Title": "Noise3D(",
				"Returns": "Float",
				"Parameters": [
					[ "Float", "X" ],
					[ "Float", "Y" ],
					[ "Float", "Z" ]
				]
			},
			{
				"Title": "Noise2D(",
				"Returns": "Float",
				"Parameters": [
					[ "Float", "X" ],
					[ "Float", "Y" ]
				]
			},
			{
				"Title": "Noise1D(",
				"Returns": "Float",
				"Parameters": [
					[ "Float", "X" ]
				]
			},
			{
				"Title": "Looping1D(",
				"Returns": "Float",
				"Parameters": [
					[ "Float", "X" ],
					[ "Float", "X Offset" ],
					[ "Float", "X Size" ]
				]
			},

			{
				"Title": "Simplex2(",
				"Returns": "Integer"
			},
			{
				"Title": "Simplex2S(",
				"Returns": "Integer"
			},
			{
				"Title": "Cellular(",
				"Returns": "Integer"
			},
			{
				"Title": "Perlin(",
				"Returns": "Integer"
			},
			{
				"Title": "ValueCubic(",
				"Returns": "Integer"
			},
			{
				"Title": "Value(",
				"Returns": "Integer"
			},

			{
				"Title": "None(",
				"Returns": "Integer"
			},
			{
				"Title": "FBm(",
				"Returns": "Integer"
			},
			{
				"Title": "Rigid(",
				"Returns": "Integer"
			},
			{
				"Title": "PingPong(",
				"Returns": "Integer"
			},

			{
				"Title": "Euclidean(",
				"Returns": "Integer"
			},
			{
				"Title": "EuclideanSq(",
				"Returns": "Integer"
			},
			{
				"Title": "Manhattan(",
				"Returns": "Integer"
			},
			{
				"Title": "Hybrid(",
				"Returns": "Integer"
			},

			{
				"Title": "CellValue(",
				"Returns": "Integer"
			},
			{
				"Title": "Distance(",
				"Returns": "Integer"
			},
			{
				"Title": "Distance2(",
				"Returns": "Integer"
			},
			{
				"Title": "Distance2Add(",
				"Returns": "Integer"
			},
			{
				"Title": "Distance2Sub(",
				"Returns": "Integer"
			},
			{
				"Title": "Distance2Mul(",
				"Returns": "Integer"
			},
			{
				"Title": "Distance2Div(",
				"Returns": "Integer"
			},

			{
				"Title": "NoiseType(",
				"Returns": "Integer"
			},
			{
				"Title": "FractalType(",
				"Returns": "Integer"
			},
			{
				"Title": "CellularFunction(",
				"Returns": "Integer"
			},
			{
				"Title": "CellularReturnType(",
				"Returns": "Integer"
			}
		],

		"Properties": [
			{
				"Title": "Seed",
				"Info": "Noise seed, converted to a number using string to seed expression.",
				"Type": "Editbox String",
				"DefaultState": 1337
			},

			{
				"Title": "Noise type",
				"Info": "Noise algorythm used to generate noise values.",
				"Type": "Combo Box",
				"DefaultState": 0,
				"Items": [
					"OpenSimplex2",
					"OpenSimplex2S",
					"Cellular",
					"Perlin",
					"ValueCubic",
					"Value"
				]
			},
			{
				"Title": "Noise frequency",
				"Info": "Noise frequency controls how much noise is\"zoomed in\".",
				"Type": "Editbox Float",
				"DefaultState": 0.01
			},

			{
				"Title": "Fractals",
				"Info": "Fractals.",
				"Type": "Group"
			},
			{
				"Title": "Fractal type",
				"Info": "Method for combining octaves into a fractal.",
				"Type": "Combo Box",
				"DefaultState": 0,
				"Items": [
					"None",
					"FBm",
					"Rigid",
					"Perlin",
					"PingPong"
				]
			},
			{
				"Title": "Fractal octaves",
				"Info": "Number of noise layers used to create a fractal.",
				"Type": "Editbox Number",
				"DefaultState": 3
			},
			{
				"Title": "Fractal lacunarity",
				"Info": "Frequency multiplayer for octaves.",
				"Type": "Editbox Float",
				"DefaultState": 2.0
			},
			{
				"Title": "Fractal weighted strength",
				"Info": "Weight for octaves, higher values decrease impact of higher octaves. Keep input between 0.0 and 1.0 otherwise Noise output may be outside -1.0 and 1.0 range.",
				"Type": "Editbox Float",
				"DefaultState": 0.0
			},
			{
				"Title": "Fractal PingPong strength",
				"Info": "PingPong fractal type strength.",
				"Type": "Editbox Float",
				"DefaultState": 2.0
			},

			{
				"Title": "Cellular",
				"Info": "Cellular.",
				"Type": "Group"
			},
			{
				"Title": "Cellular distance function",
				"Info": "Function used to create a cell for a given point. Only noise type cellular.",
				"Type": "Combo Box",
				"DefaultState": 1,
				"Items": [
					"Euclidean",
					"EuclideanSq",
					"Manhattan",
					"Hybrid"
				]
			},
			{
				"Title": "Cellular return type",
				"Info": "Controls what cellular function returns.",
				"Type": "Combo Box",
				"DefaultState": 1,
				"Items": [
					"CellValue",
					"Distance",
					"Distance2",
					"Distance2Add",
					"Distance2Sub",
					"Distance2Mul",
					"Distance2Div"
				]
			},
			{
				"Title": "Cellular jitter",
				"Info": "Maximum distance cell point can move from grid position.",
				"Type": "Editbox Float",
				"DefaultState": 1.0
			},

			{
				"Title": "Other",
				"Info": "Other.",
				"Type": "Group"
			},
			{
				"Title": "Version",
				"Info": "Noise Object version.",
				"Type": "Text",
				"DefaultState": "Noise v0.9.2 (Extension: v14, SDK: Modified DarkEdif v14 from commit 155caa97b244c4a67c40deee36fe36b871c2fcca)"
			}
		]
	}
}

name: Build

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  workflow_dispatch:


# Cancel already running ci on a new push
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build-windows:
    strategy:
      matrix:
        config: ["editor", "runtime"]

    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch tags
        if: startsWith(github.ref, 'refs/tags')
        run: git fetch --tags --force

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: 'pypy3.11'

      - name: Install meson and ninja
        run: pip install meson ninja

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86

      - name: Configure
        run: meson setup bin --buildtype release -Deditor_build=${{ matrix.config == 'editor' }}

      - name: Compile
        run: meson install -C bin

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Noise-windows-${{ matrix.config }}
          path: MFX
          retention-days: 1
          if-no-files-found: error

  build-android:
    strategy:
      matrix:
        target: ["armv7a", "aarch64", "i686", "x86_64"]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch tags
        if: startsWith(github.ref, 'refs/tags')
        run: git fetch --tags --force

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: 'pypy3.11'

      - name: Install meson and ninja
        run: pip install meson ninja

      - name: Create a cross file with correct android ndk path
        run: |
          echo [constants] > sdk/cross/android-ndk.ini
          echo android_ndk = \'$ANDROID_NDK\' >> sdk/cross/android-ndk.ini
          echo android_ndk_host_tag = \'linux-x86_64\' >> sdk/cross/android-ndk.ini
          cat sdk/cross/android-ndk.ini

      - name: Configure
        run: meson setup bin --buildtype release --cross-file sdk/cross/android-${{ matrix.target }}.ini --cross-file sdk/cross/android-ndk.ini

      - name: Compile
        run: meson install -C bin

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Noise-android-${{ matrix.target }}
          path: MFX
          retention-days: 1
          if-no-files-found: error

  build-html:
    runs-on: ubuntu-latest

    env:
      WASI_SDK_VERSION: wasi-sdk-27
      BINARYEN_VERSION: version_123

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch tags
        if: startsWith(github.ref, 'refs/tags')
        run: git fetch --tags --force

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: 'pypy3.11'

      - name: Install meson and ninja
        run: pip install meson ninja

      - name: Download wasi-sdk
        uses: robinraju/release-downloader@v1
        with:
          repository: 'WebAssembly/wasi-sdk'
          tag: ${{ env.WASI_SDK_VERSION }}
          fileName: 'wasi-sdk-*-x86_64-linux.tar.gz'
          extract: true

      - name: Download wasm-opt
        run: |
          curl -LsS --retry 5 --retry-connrefused --max-time 600 https://github.com/WebAssembly/binaryen/releases/download/${{ env.BINARYEN_VERSION }}/binaryen-${{ env.BINARYEN_VERSION }}-x86_64-linux.tar.gz | tar -xz
          sudo cp -rf binaryen-${{ env.BINARYEN_VERSION }}/* /usr/local
          rm -r binaryen-${{ env.BINARYEN_VERSION }}

      - name: Create a cross file with correct wasi-sdk path
        run: |
          mv wasi-sdk-*-x86_64-linux wasi-sdk
          echo [constants] > sdk/cross/wasi-sdk.ini
          echo wasi_sdk = \'${{ github.workspace }}/wasi-sdk\' >> sdk/cross/wasi-sdk.ini
          cat sdk/cross/wasi-sdk.ini

      - name: Configure
        run: meson setup bin --buildtype release --cross-file sdk/cross/wasm-wasi.ini --cross-file sdk/cross/wasi-sdk.ini

      - name: Compile
        run: meson install -C bin

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Noise-html
          path: MFX
          retention-days: 1
          if-no-files-found: error

  create-release-bundle:
    runs-on: ubuntu-latest
    needs: [build-windows, build-android, build-html]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: 'repo'

      # github.com/actions/checkout/issues/290
      # workaround for broken git describe
      - name: Fetch tags
        if: startsWith(github.ref, 'refs/tags')
        run: |
          cd repo
          git fetch --tags --force

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: 'arti'

      - run: |
          ls -R

      - name: Merge all artifacts
        env:
          ext_name: "Noise"
        run: |
          cd arti
          mkdir -p MFX

          # Loop over downloaded artifacts
          for dir_entry in *; do
              echo $dir_entry

              if [[ "$dir_entry" == "MFX" ]]; then
                continue
              fi

              zip_file="$dir_entry/Data/Runtime/Android/$ext_name.zip"

              # unzip android, output will be in ./app folder
              if [[ -f $zip_file ]]; then
                  echo $zip_file

                  7za x $zip_file -aoa
                  rm -f $zip_file
              fi

              cp $dir_entry/* MFX -r
          done

          # zip back android
          7za a MFX/Data/Runtime/Android/$ext_name.zip app -sdel

          cd ../repo
          version_or_hash=`git describe --dirty=+ --always`

          cd ../arti/MFX

          7za a ../../dist/Noise-$version_or_hash.zip *

      - run: ls -l dist

      - run: ls -R .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Noise-dist
          path: dist
          if-no-files-found: error

      - name: Create draft release
        if: startsWith(github.ref, 'refs/tags')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd repo
          gh release create --draft --prerelease --notes-from-tag ${{ github.ref_name }} ../dist/*